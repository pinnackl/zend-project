<?php

namespace DoctrineORMModule\Proxy\__CG__\Cms\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Article extends \Cms\Entity\Article implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'children', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'parent', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'language', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'author', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'resource', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcTitle', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcSlug', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcIntrotext', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcFulltext', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcCreated', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'categories', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'comments', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcId');
        }

        return array('__isInitialized__', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'children', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'parent', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'language', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'author', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'resource', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcTitle', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcSlug', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcIntrotext', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcFulltext', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcCreated', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'categories', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'comments', '' . "\0" . 'Cms\\Entity\\Article' . "\0" . 'artcId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Article $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setResource($resource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResource', array($resource));

        return parent::setResource($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function getResource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResource', array());

        return parent::getResource();
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcTitle', array());

        return parent::getArtcTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtcTitle($artcTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtcTitle', array($artcTitle));

        return parent::setArtcTitle($artcTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcSlug', array());

        return parent::getArtcSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtcSlug($artcSlug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtcSlug', array($artcSlug));

        return parent::setArtcSlug($artcSlug);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcIntrotext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcIntrotext', array());

        return parent::getArtcIntrotext();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtcIntrotext($artcIntrotext)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtcIntrotext', array($artcIntrotext));

        return parent::setArtcIntrotext($artcIntrotext);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcFulltext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcFulltext', array());

        return parent::getArtcFulltext();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtcFulltext($artcFulltext)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtcFulltext', array($artcFulltext));

        return parent::setArtcFulltext($artcFulltext);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcCreated', array());

        return parent::getArtcCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtcCreated($artcCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtcCreated', array($artcCreated));

        return parent::setArtcCreated($artcCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategories($categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategories', array($categories));

        return parent::setCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategories(\Doctrine\Common\Collections\Collection $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategories', array($categories));

        return parent::addCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\Cms\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($category));

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories(\Doctrine\Common\Collections\Collection $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', array($categories));

        return parent::removeCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\Cms\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', array($category));

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function addChildren(\Doctrine\Common\Collections\Collection $children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildren', array($children));

        return parent::addChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Cms\Entity\Article $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', array($child));

        return parent::addChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildren(\Doctrine\Common\Collections\Collection $children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildren', array($children));

        return parent::removeChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\Cms\Entity\Article $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', array($child));

        return parent::removeChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function removeParent(\Cms\Entity\Article $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeParent', array($parent));

        return parent::removeParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', array());

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function getArtcId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getArtcId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtcId', array());

        return parent::getArtcId();
    }

}
